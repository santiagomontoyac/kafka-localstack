services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.6.0'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - store-net

  kafka:
    image: 'confluentinc/cp-kafka:7.6.0'
    ports:
      - '9092:9092'
      - '29092:29092'    # for host-to-Docker use
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - store-net

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8083:8080'  # Host port 8083 â†’ Kafka UI's internal web port
    environment:
      KAFKA_CLUSTERS_0_NAME: 'local'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:9092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
    networks:
      - store-net

  kafka-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: kotlin-kafka-poc
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - '8082:8082'
    networks:
      - store-net

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
      - SERVICES=s3,secretsmanager,sqs, cloudformation
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./infra:/infra
    env_file:
      - .env
    networks:
      - store-net



networks:
  store-net:
    external: true

